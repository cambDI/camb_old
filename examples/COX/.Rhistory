g = 3
h =6
plot(1,1)
plot(2,3)
ls
g=3
g=3
h=3
h=3
a=10.69897
b=9.588671832
c=1.110298168
d=0.785099364
sd(a-b)
a-b
sd(a)
sd(b)
matrix(runif(25),5,5)
data = matrix(runif(25),5,5)
heatmap.2
library(ggplots2)
install.packages(ggplots2)
library("ggplots2")
install.packages("ggplots2)
c
ewofn
รง
))
quit
kwmd kwn
install.packages("ggplots2")
install.packages("gplots2")
heatmap2
heatmap.2
heatmap.
heatmap
heatmap(data)
data = matrix(runif(49),5,5)
data = matrix(runif(49),7,7)
heatmap(data)
heatmap(data,col=redgreen(256))
heatmap(data,col=red.green(256))
heatmap(data,col=red.green
)
heatmap(data,col=redgreen)
heatmap(data,col=red)
heatmap(data,col="redgreen")
heatmap(data,col="red.green")
heatmap(data,col="red")
install.packages("ggplot2")
heatmap.2(data)
heatmap2(data)
library("ggplot2")
heatmap2(data)
heatmap.2(data)
heatmap.2
heatmap(data)
heatmap2(data)
library("gplots")
install.packages("gplots")
library("gplots")
heatmap.2(data)
pdf("heatmap_feature_importance_GPCRs_seqs_130616_x.train.pdf",width=15,height=15)
library("ggplot2")
par(oma=c(3.5,3.5,3.5,3.5))
my.breaks <- c(seq(-0.25, -0.005, length.out=100),seq(-0.005, 0.005, length.out=57),seq(0.005,0.25, length.out=100))
heatmap.2(data_heatmap, Rowv=NA, labRow=seq(1,162,1),labCol=names,Colv=NA,keep.dendro=FALSE, main="", xlab="",ylab="",key=TRUE, keysize=1,trace="none",col=redblue(256),symm=T,symkey=T,symbreaks=
F,breaks=my.breaks)
dev.off()
heatmap.2(data, Rowv=NA, labRow=NA,labCol=NA,Colv=NA,keep.dendro=FALSE, main="", xlab="",ylab="",key=FALSE,trace="none",col=redgreen(256),symm=T,symkey=T,symbreaks=
+               F)
data = matrix(runif(49),7,7)z
set.seed(1)
data = matrix(runif(49),7,7)
heatmap.2(data, Rowv=NA, labRow=NA,labCol=NA,Colv=NA,keep.dendro=FALSE, main="", xlab="",ylab="",key=FALSE,trace="none",col=redgreen(256),symm=T,symkey=T,symbreaks=
+               F)
set.seed(2)
data = matrix(runif(49),7,7)
heatmap.2(data, Rowv=NA, labRow=NA,labCol=NA,Colv=NA,keep.dendro=FALSE, main="", xlab="",ylab="",key=FALSE,trace="none",col=redgreen(256),symm=T,symkey=T,symbreaks=
+               F)
heatmap.2(data, Rowv=NA, labRow=NA,labCol=NA,Colv=NA,keep.dendro=FALSE, main="", xlab="",ylab="",key=TRUE,trace="none",col=redgreen(256),symm=T,symkey=T,symbreaks=
+               F)
heatmap.2(data, Rowv=NA, labRow=NA,labCol=NA,Colv=NA,keep.dendro=FALSE, main="", xlab="",ylab="",key=TRUE,trace="none",col=redgreen(256),symm=T,symkey=T,symbreaks=
+               F,count=FALSE)
heatmap.2(data, Rowv=NA, labRow=NA,labCol=NA,Colv=NA,keep.dendro=FALSE, main="", xlab="",ylab="",key=TRUE,trace="none",col=redgreen(256),symm=T,symkey=T,symbreaks=
+               F)
heatmap.2(data, Rowv=NA, labRow=NA,labCol=NA,Colv=NA,keep.dendro=FALSE, main="", xlab="",ylab="",key=TRUE,trace="none",col=redgreen(256),symm=T,symkey=T,symbreaks=
+               F,keysize=2)
list.files()
list.files()[1]
a = 3
class(a)
a = hola
class(a)
a
str(a)
a + 3
a = "hola"
class(a)
str(a)
type.of(a)
typeof(a)
install.packages(c("caret", "gbm", "rJava", "impute", "kernlab"))
install.packages("~/Desktop/Daniel/smPredict.zip", repos = NULL)
require("~/Desktop/Daniel/smPredict", repos = NULL)
require("~/Desktop/Daniel/smPredict")
install.packages("base")
install.packages("base")
install.packages("base")
install.packages("base")
install.packages("base")
install.packages("base")
library("BiocInstaller", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("caret", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("boot", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("diR", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
quit()
install.packages("packagename", repos="http://cran.wustl.edu")
install.packages("~/Desktop/camb/camb-master.zip", repos = NULL)
library(camb)
standardiseMolecules()
standardiseMolecules
StandardiseMolecules
StandardiseMolecules(structures.file="smiles_COX.smi", standardised.file="smiles_COX_processed.sdf", is.training=TRUE)
setwd('/Users/icortes/Desktop/camb_final/camb/examples/COX')
StandardiseMolecules(structures.file="smiles_COX.smi", standardised.file="smiles_COX_processed.sdf", is.training=TRUE)
amino_acids <- read.table("AAs_COX.csv",sep=",",header=TRUE)
list.files()
amino_acids <- read.table("AAs_COX.csv",sep=",",header=TRUE)
head(amino_acids)
amino_acids
amino_acids[1]
amino_acids <- read.table("AAs_COX.csv",sep=",",header=TRUE)
amino_acids[1]
getwd()
