?train
library(caret)
?train
setwd("~/Dropbox/projects/camb/examples/QSPR/LogS/Reference_2")
library(camb)
StandardiseMolecules(structures.file="solubility_2007_ref2.sdf",
standardised.file="standardised.sdf",
removed.file="removed.sdf",
properties.file = "properties.csv",
remove.inorganic=TRUE,
fluorine.limit=3,
chlorine.limit=3,
bromine.limit=3,
iodine.limit=3,
min.mass.limit=20,
max.mass.limit=900)
properties <- read.table("properties.csv", header=TRUE, sep="\t")
properties <- properties[properties$Kept==1, ]
head(properties)
targets <- data.frame(Name = properties$NAME, target = properties$EXPT)
p <- DensityResponse(targets$target) + xlab("LogS Target Distribution")
p
descriptors <- readRDS("descriptors.rds")
all <- merge(x=targets, y=descriptors, by="Name")
ids <- all$Name
x <- all[3:ncol(all)]
y <- all$target
x.finite <- ReplaceInfinitesWithNA(x)
x.imputed <- ImputeFeatures(x.finite)
detach("package:camb", unload=TRUE)
library("camb", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
x.finite <- ReplaceInfinitesWithNA(x)
x.imputed <- ImputeFeatures(x.finite)
library(devtools)
setwd("~/Dropbox/projects/camb/roxygen")
document('../camb')
setwd("~/Dropbox/projects/camb/examples/QSPR/LogS/Reference_2")
x.finite <- ReplaceInfinitesWithNA(x)
x.imputed <- ImputeFeatures(x.finite)
ImputeFeatures <- function(d, k=10,...) {
suppressWarnings(require(impute)) || stop("Package impute is required. Install from CRAN or Bioconductor -depending on the R version you are using-.")
as.data.frame(impute.knn(as.matrix(d), k = k, ...)$data)
}
x.imputed <- ImputeFeatures(x.finite)
summary(x.finite)
ImputeFeatures <- function(d, k=10,...) {
suppressWarnings(require(impute)) || stop("Package impute is required. Install from CRAN or Bioconductor -depending on the R version you are using-.")
as.data.frame(impute.knn(as.matrix(factorsNumeric(d)), k = k, ...)$data)
}
x.imputed <- ImputeFeatures(x.finite)
asNumeric <- function(x) as.numeric(as.character(x))
factorsNumeric <- function(d) modifyList(d, lapply(d[, sapply(d, is.factor)],
asNumeric))
x.imputed <- ImputeFeatures(x.finite)
dataset <- SplitSet(ids, x.imputed, y, percentage=20)
dataset <- RemoveNearZeroVarianceFeatures(dataset, frequencyCutoff=30)
dataset <- RemoveHighlyCorrelatedFeatures(dataset, correlationCutoff=0.95)
dataset <- PreProcess(dataset)
dataset <- GetCVTrainControl(dataset)
saveRDS(dataset, file="dataset.rds")
registerDoMC(cores=1)
library(doMC)
registerDoMC(cores=1)
method <- "svmRadial"
tune.grid <- expand.grid(.sigma = expGrid(-8, 4, 2, 2), .C = c(0.0001, 0.001, 0.01, 0.1, 1, 10, 100))
model <- train(dataset$x.train, dataset$y.train, method, tuneGrid=tune.grid, trControl=dataset$trControl)
saveRDS(model, file=paste(method,".rds",sep=""))
model <- readRDS("svmRadial.rds")
plot(model, metric = "RMSE")
method <- "rf"
tune.grid <- expand.grid(.mtry = seq(5,100,5))
model <- train(dataset$x.train, dataset$y.train, method, tuneGrid=tune.grid, trControl=dataset$trControl)
method <- "gbm"
tune.grid <- expand.grid(.n.trees=c(500,1000), .interaction.depth=c(25), .shrinkage = c(0.04, 0.08, 0.16))
model <- train(dataset$x.train, dataset$y.train, method, tuneGrid=tune.grid, trControl=dataset$trControl)
saveRDS(model, file=paste(method,".rds",sep=""))
plot(model, metric = "RMSE")
model <- readRDS("rf.rds")
plot(model, metric = "RMSE")
model <- readRDS("rf.rds")
plot(model, metric = "RMSE")
method <- "rf"
tune.grid <- expand.grid(.mtry = seq(5,100,5))
model <- train(dataset$x.train, dataset$y.train, method, tuneGrid=tune.grid, trControl=dataset$trControl)
saveRDS(model, file=paste(method,".rds",sep=""))
plot(model, metric = "RMSE")
setwd("~/Dropbox/projects/camb/examples/QSPR/LogS/Reference_2")
model <- readRDS("svmRadial.rds")
plot(model, metric = "RMSE")
model <- readRDS("rf.rds")
plot(model, metric = "RMSE")
model <- readRDS("gbm.rds")
plot(model, metric = "RMSE")
method <- "gbm"
tune.grid <- expand.grid(.n.trees=c(500,1000), .interaction.depth=c(25), .shrinkage = c(0.04, 0.08, 0.16))
method <- "gbm"
tune.grid <- expand.grid(.n.trees=c(500,1000), .interaction.depth=c(25), .shrinkage = c(0.01, 0.02, 0.04, 0.08))
model <- train(dataset$x.train, dataset$y.train, method, tuneGrid=tune.grid, trControl=dataset$trControl)
saveRDS(model, file=paste(method,".rds",sep=""))
library(caret)
method <- "gbm"
tune.grid <- expand.grid(.n.trees=c(500,1000), .interaction.depth=c(25), .shrinkage = c(0.01, 0.02, 0.04, 0.08))
model <- train(dataset$x.train, dataset$y.train, method, tuneGrid=tune.grid, trControl=dataset$trControl)
plot(model, metric = "RMSE")
saveRDS(model, file=paste(method,".rds",sep=""))
model <- readRDS("gbm.rds")
plot(model, metric = "RMSE")
model <- readRDS("rf.rds")
plot(model, metric = "RMSE")
library(camb)
setwd('~/Dropbox/projects/camb/examples/QSPR/LogS/Reference_2')
StandardiseMolecules(structures.file="solubility_2007_ref2.sdf",
standardised.file="standardised.sdf",
removed.file="removed.sdf",
properties.file = "properties.csv",
remove.inorganic=TRUE,
fluorine.limit=3,
chlorine.limit=3,
bromine.limit=3,
iodine.limit=3,
min.mass.limit=20,
max.mass.limit=900)
