?train
library(caret)
?train
library(camb)
prompt('StandardiseMolecules')
setwd("~/Dropbox/projects/camb/camb/R")
prompt('StandardiseMolecules')
?train
prompt('StandardiseMolecules')
?prompt
prompt(StandardiseMolecules, force.function = TRUE)
detach("package:camb", unload=TRUE)
library("camb", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
?StandardiseMolecules
?StandardiseMolecules
detach("package:camb", unload=TRUE)
library("camb", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
?StandardiseMolecules
?ShowPropertiesSDF
detach("package:camb", unload=TRUE)
library("camb", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
?StandardiseMolecules
rm(ls=list())
rm(ls=list())
library(camb)
test_structures_sdf <- system.file("test_structures", "structures_10.sdf", package="camb")
StandardiseMolecules(structures.file=test_structures_sdf,
standardised.file="standardised.sdf",
removed.file="removed.sdf",
output = "properties.csv",
remove.inorganic=TRUE,
fluorine.limit=3,
chlorine.limit=3,
bromine.limit=3,
iodine.limit=3,
min.mass.limit=20,
max.mass.limit=900)
detach("package:camb", unload=TRUE)
library("camb", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
?StandardiseMolecules
example(StandardiseMolecules)
?Validation
detach("package:camb", unload=TRUE)
library("camb", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
?StandardiseMolecules
detach("package:camb", unload=TRUE)
library("camb", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
?StandardiseMolecules
hmm <- PredictExternal(test_structures_file, standardisation.options, descriptor.types, dataset, readRDS("rf.rds"))
library(camb)
library(randomForest)
hmm <- PredictExternal(test_structures_file, standardisation.options, descriptor.types, dataset, readRDS("rf.rds"))
PredictExternal <- function(structures.file, standardisation.options, descriptor.types, dataset, model) {
model = model # this is done to make sure model gets evaluated successfully first
standardised.file <- tempfile("standardised", fileext=".sdf")
removed.file <- tempfile("removed", fileext=".sdf")
properties.file <- tempfile("properties", fileext=".csv")
StandardiseMolecules(structures.file = structures.file,
standardised.file = standardised.file,
removed.file = removed.file,
properties.file = properties.file,
standardisation.options)
descriptors <- GeneratePadelDescriptors(standardised.file = standardised.file, types=c("2D"), threads = 1)
descriptors <- RemoveStandardisedPrefix(descriptors)
ids <- descriptors[,1]
x <- descriptors[,2:ncol(descriptors)]
x <- x[, names(dataset$x.train)]
x.finite <- ReplaceInfinitesWithNA(x)
x.imputed <- ImputeFeatures(x.finite)
x.preprocessed <- predict(dataset$transformation, x.imputed)
predictions <- predict(model, newdata=x.preprocessed)
return(data.frame(id=ids, prediction=predictions))
}
hmm <- PredictExternal(test_structures_file, standardisation.options, descriptor.types, dataset, readRDS("rf.rds"))
setwd("~/Dropbox/projects/camb/examples/QSPR/LogS/Reference_2")
hmm <- PredictExternal(test_structures_file, standardisation.options, descriptor.types, dataset, readRDS("rf.rds"))
test_structures_file <- system.file("test_structures", "structures_10.sdf", package = "camb")
hmm <- PredictExternal(test_structures_file, standardisation.options, descriptor.types, dataset, readRDS("rf.rds"))
library(camb)
library(randomForest)
hmm <- PredictExternal(test_structures_file, standardisation.options, descriptor.types, dataset, readRDS("rf.rds"))
hmm
library(devtools)
setwd("~/Dropbox/projects/camb/roxygen")
document('../camb')
setwd("~/Dropbox/projects/camb/examples/QSPR/LogS/Reference_2")
library(devtools)
setwd("~/Dropbox/projects/camb/roxygen")
document('../camb')
setwd("~/Dropbox/projects/camb/examples/QSPR/LogS/Reference_2")
library("camb", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
hmm <- PredictExternal(test_structures_file, standardisation.options, descriptor.types, dataset, readRDS("rf.rds"))
fix(PredictExternal)
rm(PredictExternal)
detach("package:camb", unload=TRUE)
library("camb", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
hmm <- PredictExternal(test_structures_file, standardisation.options, descriptor.types, dataset, readRDS("rf.rds"))
predictions <- PredictExternal(test_structures_file, standardisation.options, descriptor.types, dataset, readRDS("rf.rds"))
print(predictions)
saveRDS("standardisation_options.rds")
saveRDS(standardisation.options, "standardisation_options.rds")
setwd("~/Dropbox/projects/camb/examples/QSPR/LogS/Reference_2")
standardisation.options <- StandardiseMolecules(structures.file="solubility_2007_ref2.sdf",
standardised.file="standardised.sdf",
removed.file="removed.sdf",
properties.file = "properties.csv",
remove.inorganic=TRUE,
fluorine.limit=3,
chlorine.limit=3,
bromine.limit=3,
iodine.limit=3,
min.mass.limit=20,
max.mass.limit=900)
saveRDS(standardisation.options, "standardisation_options.rds")
library("camb", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
standardisation.options <- StandardiseMolecules(structures.file="solubility_2007_ref2.sdf",
standardised.file="standardised.sdf",
removed.file="removed.sdf",
properties.file = "properties.csv",
remove.inorganic=TRUE,
fluorine.limit=3,
chlorine.limit=3,
bromine.limit=3,
iodine.limit=3,
min.mass.limit=20,
max.mass.limit=900)
saveRDS(standardisation.options, "standardisation_options.rds")
